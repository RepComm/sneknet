// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ipc.proto

// Protobuf Java Version: 4.26.0
package com.repcomm.sneknet.protos;

/**
 * Protobuf type {@code ipc.IpcMsg}
 */
public final class IpcMsg extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:ipc.IpcMsg)
    IpcMsgOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 0,
      /* suffix= */ "",
      IpcMsg.class.getName());
  }
  // Use IpcMsg.newBuilder() to construct.
  private IpcMsg(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private IpcMsg() {
    error_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.repcomm.sneknet.protos.IPC.internal_static_ipc_IpcMsg_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.repcomm.sneknet.protos.IPC.internal_static_ipc_IpcMsg_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.repcomm.sneknet.protos.IpcMsg.class, com.repcomm.sneknet.protos.IpcMsg.Builder.class);
  }

  private int bitField0_;
  private int payloadCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object payload_;
  public enum PayloadCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    IPV4TCP(5),
    IPV4UDP(6),
    PAYLOAD_NOT_SET(0);
    private final int value;
    private PayloadCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PayloadCase valueOf(int value) {
      return forNumber(value);
    }

    public static PayloadCase forNumber(int value) {
      switch (value) {
        case 5: return IPV4TCP;
        case 6: return IPV4UDP;
        case 0: return PAYLOAD_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PayloadCase
  getPayloadCase() {
    return PayloadCase.forNumber(
        payloadCase_);
  }

  public static final int TRANSACTIONID_FIELD_NUMBER = 1;
  private int transactionId_ = 0;
  /**
   * <code>int32 TransactionId = 1;</code>
   * @return The transactionId.
   */
  @java.lang.Override
  public int getTransactionId() {
    return transactionId_;
  }

  public static final int ISRESPONSE_FIELD_NUMBER = 2;
  private boolean isResponse_ = false;
  /**
   * <pre>
   * *when true, TransactionId is the same as request TransactionId
   * </pre>
   *
   * <code>optional bool IsResponse = 2;</code>
   * @return Whether the isResponse field is set.
   */
  @java.lang.Override
  public boolean hasIsResponse() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * *when true, TransactionId is the same as request TransactionId
   * </pre>
   *
   * <code>optional bool IsResponse = 2;</code>
   * @return The isResponse.
   */
  @java.lang.Override
  public boolean getIsResponse() {
    return isResponse_;
  }

  public static final int ISSUCCESS_FIELD_NUMBER = 3;
  private boolean isSuccess_ = false;
  /**
   * <pre>
   * *whether a transaction was successful
   * </pre>
   *
   * <code>optional bool IsSuccess = 3;</code>
   * @return Whether the isSuccess field is set.
   */
  @java.lang.Override
  public boolean hasIsSuccess() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * *whether a transaction was successful
   * </pre>
   *
   * <code>optional bool IsSuccess = 3;</code>
   * @return The isSuccess.
   */
  @java.lang.Override
  public boolean getIsSuccess() {
    return isSuccess_;
  }

  public static final int ERROR_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object error_ = "";
  /**
   * <pre>
   * *when IsSuccess = false, the error message
   * </pre>
   *
   * <code>optional string Error = 4;</code>
   * @return Whether the error field is set.
   */
  @java.lang.Override
  public boolean hasError() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * *when IsSuccess = false, the error message
   * </pre>
   *
   * <code>optional string Error = 4;</code>
   * @return The error.
   */
  @java.lang.Override
  public java.lang.String getError() {
    java.lang.Object ref = error_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      error_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * *when IsSuccess = false, the error message
   * </pre>
   *
   * <code>optional string Error = 4;</code>
   * @return The bytes for error.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getErrorBytes() {
    java.lang.Object ref = error_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      error_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IPV4TCP_FIELD_NUMBER = 5;
  /**
   * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
   * @return Whether the iPv4Tcp field is set.
   */
  @java.lang.Override
  public boolean hasIPv4Tcp() {
    return payloadCase_ == 5;
  }
  /**
   * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
   * @return The iPv4Tcp.
   */
  @java.lang.Override
  public com.repcomm.sneknet.protos.IPv4TcpMsg getIPv4Tcp() {
    if (payloadCase_ == 5) {
       return (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_;
    }
    return com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance();
  }
  /**
   * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
   */
  @java.lang.Override
  public com.repcomm.sneknet.protos.IPv4TcpMsgOrBuilder getIPv4TcpOrBuilder() {
    if (payloadCase_ == 5) {
       return (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_;
    }
    return com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance();
  }

  public static final int IPV4UDP_FIELD_NUMBER = 6;
  /**
   * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
   * @return Whether the iPv4Udp field is set.
   */
  @java.lang.Override
  public boolean hasIPv4Udp() {
    return payloadCase_ == 6;
  }
  /**
   * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
   * @return The iPv4Udp.
   */
  @java.lang.Override
  public com.repcomm.sneknet.protos.IPv4UdpMsg getIPv4Udp() {
    if (payloadCase_ == 6) {
       return (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_;
    }
    return com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance();
  }
  /**
   * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
   */
  @java.lang.Override
  public com.repcomm.sneknet.protos.IPv4UdpMsgOrBuilder getIPv4UdpOrBuilder() {
    if (payloadCase_ == 6) {
       return (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_;
    }
    return com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (transactionId_ != 0) {
      output.writeInt32(1, transactionId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeBool(2, isResponse_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeBool(3, isSuccess_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, error_);
    }
    if (payloadCase_ == 5) {
      output.writeMessage(5, (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_);
    }
    if (payloadCase_ == 6) {
      output.writeMessage(6, (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (transactionId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, transactionId_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(2, isResponse_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, isSuccess_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, error_);
    }
    if (payloadCase_ == 5) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_);
    }
    if (payloadCase_ == 6) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.repcomm.sneknet.protos.IpcMsg)) {
      return super.equals(obj);
    }
    com.repcomm.sneknet.protos.IpcMsg other = (com.repcomm.sneknet.protos.IpcMsg) obj;

    if (getTransactionId()
        != other.getTransactionId()) return false;
    if (hasIsResponse() != other.hasIsResponse()) return false;
    if (hasIsResponse()) {
      if (getIsResponse()
          != other.getIsResponse()) return false;
    }
    if (hasIsSuccess() != other.hasIsSuccess()) return false;
    if (hasIsSuccess()) {
      if (getIsSuccess()
          != other.getIsSuccess()) return false;
    }
    if (hasError() != other.hasError()) return false;
    if (hasError()) {
      if (!getError()
          .equals(other.getError())) return false;
    }
    if (!getPayloadCase().equals(other.getPayloadCase())) return false;
    switch (payloadCase_) {
      case 5:
        if (!getIPv4Tcp()
            .equals(other.getIPv4Tcp())) return false;
        break;
      case 6:
        if (!getIPv4Udp()
            .equals(other.getIPv4Udp())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRANSACTIONID_FIELD_NUMBER;
    hash = (53 * hash) + getTransactionId();
    if (hasIsResponse()) {
      hash = (37 * hash) + ISRESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsResponse());
    }
    if (hasIsSuccess()) {
      hash = (37 * hash) + ISSUCCESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsSuccess());
    }
    if (hasError()) {
      hash = (37 * hash) + ERROR_FIELD_NUMBER;
      hash = (53 * hash) + getError().hashCode();
    }
    switch (payloadCase_) {
      case 5:
        hash = (37 * hash) + IPV4TCP_FIELD_NUMBER;
        hash = (53 * hash) + getIPv4Tcp().hashCode();
        break;
      case 6:
        hash = (37 * hash) + IPV4UDP_FIELD_NUMBER;
        hash = (53 * hash) + getIPv4Udp().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.repcomm.sneknet.protos.IpcMsg parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.repcomm.sneknet.protos.IpcMsg parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.repcomm.sneknet.protos.IpcMsg parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.repcomm.sneknet.protos.IpcMsg prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code ipc.IpcMsg}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:ipc.IpcMsg)
      com.repcomm.sneknet.protos.IpcMsgOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.repcomm.sneknet.protos.IPC.internal_static_ipc_IpcMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.repcomm.sneknet.protos.IPC.internal_static_ipc_IpcMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.repcomm.sneknet.protos.IpcMsg.class, com.repcomm.sneknet.protos.IpcMsg.Builder.class);
    }

    // Construct using com.repcomm.sneknet.protos.IpcMsg.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      transactionId_ = 0;
      isResponse_ = false;
      isSuccess_ = false;
      error_ = "";
      if (iPv4TcpBuilder_ != null) {
        iPv4TcpBuilder_.clear();
      }
      if (iPv4UdpBuilder_ != null) {
        iPv4UdpBuilder_.clear();
      }
      payloadCase_ = 0;
      payload_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.repcomm.sneknet.protos.IPC.internal_static_ipc_IpcMsg_descriptor;
    }

    @java.lang.Override
    public com.repcomm.sneknet.protos.IpcMsg getDefaultInstanceForType() {
      return com.repcomm.sneknet.protos.IpcMsg.getDefaultInstance();
    }

    @java.lang.Override
    public com.repcomm.sneknet.protos.IpcMsg build() {
      com.repcomm.sneknet.protos.IpcMsg result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.repcomm.sneknet.protos.IpcMsg buildPartial() {
      com.repcomm.sneknet.protos.IpcMsg result = new com.repcomm.sneknet.protos.IpcMsg(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(com.repcomm.sneknet.protos.IpcMsg result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.transactionId_ = transactionId_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.isResponse_ = isResponse_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.isSuccess_ = isSuccess_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.error_ = error_;
        to_bitField0_ |= 0x00000004;
      }
      result.bitField0_ |= to_bitField0_;
    }

    private void buildPartialOneofs(com.repcomm.sneknet.protos.IpcMsg result) {
      result.payloadCase_ = payloadCase_;
      result.payload_ = this.payload_;
      if (payloadCase_ == 5 &&
          iPv4TcpBuilder_ != null) {
        result.payload_ = iPv4TcpBuilder_.build();
      }
      if (payloadCase_ == 6 &&
          iPv4UdpBuilder_ != null) {
        result.payload_ = iPv4UdpBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.repcomm.sneknet.protos.IpcMsg) {
        return mergeFrom((com.repcomm.sneknet.protos.IpcMsg)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.repcomm.sneknet.protos.IpcMsg other) {
      if (other == com.repcomm.sneknet.protos.IpcMsg.getDefaultInstance()) return this;
      if (other.getTransactionId() != 0) {
        setTransactionId(other.getTransactionId());
      }
      if (other.hasIsResponse()) {
        setIsResponse(other.getIsResponse());
      }
      if (other.hasIsSuccess()) {
        setIsSuccess(other.getIsSuccess());
      }
      if (other.hasError()) {
        error_ = other.error_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      switch (other.getPayloadCase()) {
        case IPV4TCP: {
          mergeIPv4Tcp(other.getIPv4Tcp());
          break;
        }
        case IPV4UDP: {
          mergeIPv4Udp(other.getIPv4Udp());
          break;
        }
        case PAYLOAD_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              transactionId_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              isResponse_ = input.readBool();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              isSuccess_ = input.readBool();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              error_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getIPv4TcpFieldBuilder().getBuilder(),
                  extensionRegistry);
              payloadCase_ = 5;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getIPv4UdpFieldBuilder().getBuilder(),
                  extensionRegistry);
              payloadCase_ = 6;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public PayloadCase
        getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public Builder clearPayload() {
      payloadCase_ = 0;
      payload_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private int transactionId_ ;
    /**
     * <code>int32 TransactionId = 1;</code>
     * @return The transactionId.
     */
    @java.lang.Override
    public int getTransactionId() {
      return transactionId_;
    }
    /**
     * <code>int32 TransactionId = 1;</code>
     * @param value The transactionId to set.
     * @return This builder for chaining.
     */
    public Builder setTransactionId(int value) {

      transactionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>int32 TransactionId = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearTransactionId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      transactionId_ = 0;
      onChanged();
      return this;
    }

    private boolean isResponse_ ;
    /**
     * <pre>
     * *when true, TransactionId is the same as request TransactionId
     * </pre>
     *
     * <code>optional bool IsResponse = 2;</code>
     * @return Whether the isResponse field is set.
     */
    @java.lang.Override
    public boolean hasIsResponse() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * *when true, TransactionId is the same as request TransactionId
     * </pre>
     *
     * <code>optional bool IsResponse = 2;</code>
     * @return The isResponse.
     */
    @java.lang.Override
    public boolean getIsResponse() {
      return isResponse_;
    }
    /**
     * <pre>
     * *when true, TransactionId is the same as request TransactionId
     * </pre>
     *
     * <code>optional bool IsResponse = 2;</code>
     * @param value The isResponse to set.
     * @return This builder for chaining.
     */
    public Builder setIsResponse(boolean value) {

      isResponse_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *when true, TransactionId is the same as request TransactionId
     * </pre>
     *
     * <code>optional bool IsResponse = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsResponse() {
      bitField0_ = (bitField0_ & ~0x00000002);
      isResponse_ = false;
      onChanged();
      return this;
    }

    private boolean isSuccess_ ;
    /**
     * <pre>
     * *whether a transaction was successful
     * </pre>
     *
     * <code>optional bool IsSuccess = 3;</code>
     * @return Whether the isSuccess field is set.
     */
    @java.lang.Override
    public boolean hasIsSuccess() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * *whether a transaction was successful
     * </pre>
     *
     * <code>optional bool IsSuccess = 3;</code>
     * @return The isSuccess.
     */
    @java.lang.Override
    public boolean getIsSuccess() {
      return isSuccess_;
    }
    /**
     * <pre>
     * *whether a transaction was successful
     * </pre>
     *
     * <code>optional bool IsSuccess = 3;</code>
     * @param value The isSuccess to set.
     * @return This builder for chaining.
     */
    public Builder setIsSuccess(boolean value) {

      isSuccess_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *whether a transaction was successful
     * </pre>
     *
     * <code>optional bool IsSuccess = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIsSuccess() {
      bitField0_ = (bitField0_ & ~0x00000004);
      isSuccess_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object error_ = "";
    /**
     * <pre>
     * *when IsSuccess = false, the error message
     * </pre>
     *
     * <code>optional string Error = 4;</code>
     * @return Whether the error field is set.
     */
    public boolean hasError() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * *when IsSuccess = false, the error message
     * </pre>
     *
     * <code>optional string Error = 4;</code>
     * @return The error.
     */
    public java.lang.String getError() {
      java.lang.Object ref = error_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        error_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * *when IsSuccess = false, the error message
     * </pre>
     *
     * <code>optional string Error = 4;</code>
     * @return The bytes for error.
     */
    public com.google.protobuf.ByteString
        getErrorBytes() {
      java.lang.Object ref = error_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        error_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * *when IsSuccess = false, the error message
     * </pre>
     *
     * <code>optional string Error = 4;</code>
     * @param value The error to set.
     * @return This builder for chaining.
     */
    public Builder setError(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      error_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *when IsSuccess = false, the error message
     * </pre>
     *
     * <code>optional string Error = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearError() {
      error_ = getDefaultInstance().getError();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * *when IsSuccess = false, the error message
     * </pre>
     *
     * <code>optional string Error = 4;</code>
     * @param value The bytes for error to set.
     * @return This builder for chaining.
     */
    public Builder setErrorBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      error_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.repcomm.sneknet.protos.IPv4TcpMsg, com.repcomm.sneknet.protos.IPv4TcpMsg.Builder, com.repcomm.sneknet.protos.IPv4TcpMsgOrBuilder> iPv4TcpBuilder_;
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     * @return Whether the iPv4Tcp field is set.
     */
    @java.lang.Override
    public boolean hasIPv4Tcp() {
      return payloadCase_ == 5;
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     * @return The iPv4Tcp.
     */
    @java.lang.Override
    public com.repcomm.sneknet.protos.IPv4TcpMsg getIPv4Tcp() {
      if (iPv4TcpBuilder_ == null) {
        if (payloadCase_ == 5) {
          return (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_;
        }
        return com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance();
      } else {
        if (payloadCase_ == 5) {
          return iPv4TcpBuilder_.getMessage();
        }
        return com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance();
      }
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    public Builder setIPv4Tcp(com.repcomm.sneknet.protos.IPv4TcpMsg value) {
      if (iPv4TcpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        iPv4TcpBuilder_.setMessage(value);
      }
      payloadCase_ = 5;
      return this;
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    public Builder setIPv4Tcp(
        com.repcomm.sneknet.protos.IPv4TcpMsg.Builder builderForValue) {
      if (iPv4TcpBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        iPv4TcpBuilder_.setMessage(builderForValue.build());
      }
      payloadCase_ = 5;
      return this;
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    public Builder mergeIPv4Tcp(com.repcomm.sneknet.protos.IPv4TcpMsg value) {
      if (iPv4TcpBuilder_ == null) {
        if (payloadCase_ == 5 &&
            payload_ != com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance()) {
          payload_ = com.repcomm.sneknet.protos.IPv4TcpMsg.newBuilder((com.repcomm.sneknet.protos.IPv4TcpMsg) payload_)
              .mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        if (payloadCase_ == 5) {
          iPv4TcpBuilder_.mergeFrom(value);
        } else {
          iPv4TcpBuilder_.setMessage(value);
        }
      }
      payloadCase_ = 5;
      return this;
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    public Builder clearIPv4Tcp() {
      if (iPv4TcpBuilder_ == null) {
        if (payloadCase_ == 5) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
      } else {
        if (payloadCase_ == 5) {
          payloadCase_ = 0;
          payload_ = null;
        }
        iPv4TcpBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    public com.repcomm.sneknet.protos.IPv4TcpMsg.Builder getIPv4TcpBuilder() {
      return getIPv4TcpFieldBuilder().getBuilder();
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    @java.lang.Override
    public com.repcomm.sneknet.protos.IPv4TcpMsgOrBuilder getIPv4TcpOrBuilder() {
      if ((payloadCase_ == 5) && (iPv4TcpBuilder_ != null)) {
        return iPv4TcpBuilder_.getMessageOrBuilder();
      } else {
        if (payloadCase_ == 5) {
          return (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_;
        }
        return com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance();
      }
    }
    /**
     * <code>.ipc.IPv4TcpMsg IPv4Tcp = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.repcomm.sneknet.protos.IPv4TcpMsg, com.repcomm.sneknet.protos.IPv4TcpMsg.Builder, com.repcomm.sneknet.protos.IPv4TcpMsgOrBuilder> 
        getIPv4TcpFieldBuilder() {
      if (iPv4TcpBuilder_ == null) {
        if (!(payloadCase_ == 5)) {
          payload_ = com.repcomm.sneknet.protos.IPv4TcpMsg.getDefaultInstance();
        }
        iPv4TcpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.repcomm.sneknet.protos.IPv4TcpMsg, com.repcomm.sneknet.protos.IPv4TcpMsg.Builder, com.repcomm.sneknet.protos.IPv4TcpMsgOrBuilder>(
                (com.repcomm.sneknet.protos.IPv4TcpMsg) payload_,
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      payloadCase_ = 5;
      onChanged();
      return iPv4TcpBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilder<
        com.repcomm.sneknet.protos.IPv4UdpMsg, com.repcomm.sneknet.protos.IPv4UdpMsg.Builder, com.repcomm.sneknet.protos.IPv4UdpMsgOrBuilder> iPv4UdpBuilder_;
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     * @return Whether the iPv4Udp field is set.
     */
    @java.lang.Override
    public boolean hasIPv4Udp() {
      return payloadCase_ == 6;
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     * @return The iPv4Udp.
     */
    @java.lang.Override
    public com.repcomm.sneknet.protos.IPv4UdpMsg getIPv4Udp() {
      if (iPv4UdpBuilder_ == null) {
        if (payloadCase_ == 6) {
          return (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_;
        }
        return com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance();
      } else {
        if (payloadCase_ == 6) {
          return iPv4UdpBuilder_.getMessage();
        }
        return com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance();
      }
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    public Builder setIPv4Udp(com.repcomm.sneknet.protos.IPv4UdpMsg value) {
      if (iPv4UdpBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        iPv4UdpBuilder_.setMessage(value);
      }
      payloadCase_ = 6;
      return this;
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    public Builder setIPv4Udp(
        com.repcomm.sneknet.protos.IPv4UdpMsg.Builder builderForValue) {
      if (iPv4UdpBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        iPv4UdpBuilder_.setMessage(builderForValue.build());
      }
      payloadCase_ = 6;
      return this;
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    public Builder mergeIPv4Udp(com.repcomm.sneknet.protos.IPv4UdpMsg value) {
      if (iPv4UdpBuilder_ == null) {
        if (payloadCase_ == 6 &&
            payload_ != com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance()) {
          payload_ = com.repcomm.sneknet.protos.IPv4UdpMsg.newBuilder((com.repcomm.sneknet.protos.IPv4UdpMsg) payload_)
              .mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        if (payloadCase_ == 6) {
          iPv4UdpBuilder_.mergeFrom(value);
        } else {
          iPv4UdpBuilder_.setMessage(value);
        }
      }
      payloadCase_ = 6;
      return this;
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    public Builder clearIPv4Udp() {
      if (iPv4UdpBuilder_ == null) {
        if (payloadCase_ == 6) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
      } else {
        if (payloadCase_ == 6) {
          payloadCase_ = 0;
          payload_ = null;
        }
        iPv4UdpBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    public com.repcomm.sneknet.protos.IPv4UdpMsg.Builder getIPv4UdpBuilder() {
      return getIPv4UdpFieldBuilder().getBuilder();
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    @java.lang.Override
    public com.repcomm.sneknet.protos.IPv4UdpMsgOrBuilder getIPv4UdpOrBuilder() {
      if ((payloadCase_ == 6) && (iPv4UdpBuilder_ != null)) {
        return iPv4UdpBuilder_.getMessageOrBuilder();
      } else {
        if (payloadCase_ == 6) {
          return (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_;
        }
        return com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance();
      }
    }
    /**
     * <code>.ipc.IPv4UdpMsg IPv4Udp = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        com.repcomm.sneknet.protos.IPv4UdpMsg, com.repcomm.sneknet.protos.IPv4UdpMsg.Builder, com.repcomm.sneknet.protos.IPv4UdpMsgOrBuilder> 
        getIPv4UdpFieldBuilder() {
      if (iPv4UdpBuilder_ == null) {
        if (!(payloadCase_ == 6)) {
          payload_ = com.repcomm.sneknet.protos.IPv4UdpMsg.getDefaultInstance();
        }
        iPv4UdpBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            com.repcomm.sneknet.protos.IPv4UdpMsg, com.repcomm.sneknet.protos.IPv4UdpMsg.Builder, com.repcomm.sneknet.protos.IPv4UdpMsgOrBuilder>(
                (com.repcomm.sneknet.protos.IPv4UdpMsg) payload_,
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      payloadCase_ = 6;
      onChanged();
      return iPv4UdpBuilder_;
    }

    // @@protoc_insertion_point(builder_scope:ipc.IpcMsg)
  }

  // @@protoc_insertion_point(class_scope:ipc.IpcMsg)
  private static final com.repcomm.sneknet.protos.IpcMsg DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.repcomm.sneknet.protos.IpcMsg();
  }

  public static com.repcomm.sneknet.protos.IpcMsg getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<IpcMsg>
      PARSER = new com.google.protobuf.AbstractParser<IpcMsg>() {
    @java.lang.Override
    public IpcMsg parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<IpcMsg> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<IpcMsg> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.repcomm.sneknet.protos.IpcMsg getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

